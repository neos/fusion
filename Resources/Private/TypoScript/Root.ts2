prototype(Neos.Fusion:Array).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\ArrayImplementation'
prototype(Neos.Fusion:RawArray).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\RawArrayImplementation'
prototype(Neos.Fusion:Template).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\TemplateImplementation'
prototype(Neos.Fusion:Case).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\CaseImplementation'
prototype(Neos.Fusion:Matcher).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\MatcherImplementation'
prototype(Neos.Fusion:Renderer).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\RendererImplementation'
prototype(Neos.Fusion:Value).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\ValueImplementation'
prototype(Neos.Fusion:Debug).@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\DebugImplementation'
prototype(Neos.Fusion:Collection) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\CollectionImplementation'
	itemName = 'item'
	itemKey = 'itemKey'
	iterationName = 'iterator'
}
prototype(Neos.Fusion:RawCollection) {
  @class = 'TYPO3\\TypoScript\\TypoScriptObjects\\RawCollectionImplementation'
  itemName = 'item'
  itemKey = 'itemKey'
  iterationName = 'iterator'
}

# Render an HTTP response header
#
prototype(Neos.Fusion:Http.ResponseHead) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\Http\\ResponseHeadImplementation'
	headers = Neos.Fusion:RawArray
}

# Render an HTTP message (response)
#
# This is a convenient base prototype for rendering documents.
#
# Usage:
# page = Neos.Fusion:Http.Message {
#   httpResponseHead {
#     statusCode = 404
#     headers.Content-Type = 'application/json'
#   }
# }
#
#
prototype(Neos.Fusion:Http.Message) < prototype(Neos.Fusion:Array) {
	httpResponseHead = Neos.Fusion:Http.ResponseHead
	httpResponseHead.@position = 'start 1000'
}

# Renders attributes of a HTML tag
#
# Usage:
# attributes = Neos.Fusion:Attributes {
#   foo = 'bar'
#   class = Neos.Fusion:RawArray {
#     class1 = 'class1'
#     class2 = 'class2'
#   }
# }
#
prototype(Neos.Fusion:Attributes) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\AttributesImplementation'
}

# Renders an HTML tag
#
# Usage:
# tag = Neos.Fusion:Attributes {
#   tagName = 'h1'
#   attributes = {
#     class = 'some-class'
#   }
# }
#
prototype(Neos.Fusion:Tag) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\TagImplementation'
	attributes = Neos.Fusion:Attributes
	omitClosingTag = FALSE
	selfClosingTag = FALSE
}

# Renders an URI pointing to a controller/action
#
# Usage:
# uri = Neos.Fusion:UriBuilder {
#   package = 'Some.Package'
#   controller = 'Standard'
#   action = 'index'
# }
#
prototype(Neos.Fusion:UriBuilder) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\UriBuilderImplementation'
	additionalParams = Neos.Fusion:RawArray
	arguments = Neos.Fusion:RawArray
	argumentsToBeExcludedFromQueryString = Neos.Fusion:RawArray

	@exceptionHandler = 'TYPO3\\TypoScript\\Core\\ExceptionHandlers\\AbsorbingHandler'
}

# Renders an URI pointing to a resource
#
# Usage:
# fileUri = Neos.Fusion:ResourceUri {
#   path = 'resource://Some.Package/Public/Images/SomeImage.png'
# }
#
prototype(Neos.Fusion:ResourceUri) {
	@class = 'TYPO3\\TypoScript\\TypoScriptObjects\\ResourceUriImplementation'
	localize = TRUE

	@exceptionHandler = 'TYPO3\\TypoScript\\Core\\ExceptionHandlers\\AbsorbingHandler'
}

# These are globally applied cache identifiers.
# If you don't make @cache.entryIdentifiers another prototype (like a Neos.Fusion:RawArray)
# they will be rendered as this prototype, which means everything in here is added to ALL cached
# TypoScript parts.
# The baseUri contains the protocol (http/https), domain and port.
#
# WARNING: Do not delete this prototype, it is used inside of \Neos\Fusion\Core\Cache\RuntimeContentCache::buildCacheIdentifierValues() as a fallback.
#
prototype(Neos.Fusion:GlobalCacheIdentifiers) < prototype(Neos.Fusion:RawArray) {
	format = ${request.format}
	baseUri = ${String.toString(request.httpRequest.baseUri)}
}
