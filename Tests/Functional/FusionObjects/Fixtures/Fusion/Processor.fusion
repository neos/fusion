prototype(Neos.Fusion:Value).@class = 'Neos\\Fusion\\FusionObjects\\ValueImplementation'
prototype(Neos.Fusion:TestRenderer).@class = 'Neos\\Fusion\\Tests\\Functional\\View\\Fixtures\\TestRenderer'

processors.newSyntax.basicProcessor {
  valueWithNestedPlainValue = Neos.Fusion:Value {
    value = 'Hello'
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
  }

  valueWithNestedEel = Neos.Fusion:Value {
    value = ${'Hello'}
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
  }

  valueWithNestedFusion = Neos.Fusion:Value {
    value = Neos.Fusion:Value {
      value = 'Hello'
    }
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
  }
}

processors.newSyntax.processorBeforeValue {
  valueWithNestedPlainValue = Neos.Fusion:Value {
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
    value = 'Hello'
  }

  valueWithNestedEel = Neos.Fusion:Value {
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
    value = ${'Hello'}
  }

  valueWithNestedFusion = Neos.Fusion:Value {
    value.@process.2 = ${value + ' foo'}
    value.@process.1 = ${value + ' World'}
    value = Neos.Fusion:Value {
      value = 'Hello'
    }
  }
}



processors.newSyntax.extendedSyntaxProcessor {
  valueWithNestedPlainValue = Neos.Fusion:Value {
    value = 'Hello'
    value.@process.1 = ${value + ' foo'}
    value.@process.default {
      expression = ${value + ' World'}
      @position = 'start'
    }
  }

  valueWithNestedEel = Neos.Fusion:Value {
    value = ${'Hello'}
    value.@process.1 = ${value + ' foo'}
    value.@process.default {
      expression = ${value + ' World'}
      @position = 'start'
    }
  }

  valueWithNestedFusion = Neos.Fusion:Value {
    value = Neos.Fusion:Value {
      value = 'Hello'
    }
    value.@process.1 = ${value + ' foo'}
    value.@process.default {
      expression = ${value + ' World'}
      @position = 'start'
    }
  }
}

prototype(Neos.Fusion:ProcessorUnset1) < prototype(Neos.Fusion:Value) {
  value = "Foo"
  value.@process.1 = ${value + 'bar'}
  value.@process.2 = ${value + 'baz'}
}

prototype(Neos.Fusion:ProcessorUnset2) < prototype(Neos.Fusion:ProcessorUnset1) {
  value.@process.1 >
}

processors.newSyntax.unset {
  simple = 'Foo'
  simple.@process.1 = ${value + 'bar'}
  simple.@process.2 = ${value + 'baz'}

  simple.@process.1 >

  prototypes1 = Neos.Fusion:ProcessorUnset1
  prototypes1.value.@process.1 >

  prototypes2 = Neos.Fusion:ProcessorUnset2

  nestedScope {
    prototypes3 = Neos.Fusion:ProcessorUnset1
    prototype(Neos.Fusion:ProcessorUnset1).value.@process.1 >
  }



}

processors.newSyntax.usingThisInProcessor = Neos.Fusion:Value {
  value = "my value"
  @process.1 = ${value + this.append}
  append = " append"
}

// https://github.com/neos/neos-development-collection/issues/3469
processors.newSyntax.skippedLazyPropsInProcessor = Neos.Fusion:Component {
  lazyPropValue = "foo"

  lazyPropSkipped = "skip"
  lazyPropSkipped.@if.1 = false

  renderer = Neos.Fusion:DataStructure {
    buz = "bar"
    @process.combine = ${Array.concat(value, Array.filter(props, prop => prop != null))}
  }
}
